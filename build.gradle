buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "gradle.plugin.us.ihmc.gradle:ihmc-build:0.0.18"
  }
}

apply plugin: "us.ihmc.gradle.ihmc-build"

sourceCompatibility = 1.7
version = '1.0'

repositories ihmc.ihmcDefaultArtifactProxies()

repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
    maven {
        url "https://bengal.ihmc.us/nexus/content/repositories/thirdparty/"
    }
}

dependencies {
    compile group: 'javax.vecmath', name: 'vecmath', version: '1.5.2'
    compile "org.apache.commons:commons-lang3:3.4"
    compile "us.ihmc.thirdparty.jme:jme3-core:3.1.0-internal4"

    compile ihmc.getProjectDependency(":IHMCCommunication")
    compile ihmc.getProjectDependency(":IHMCHumanoidRobotics")
    compile ihmc.getProjectDependency(":IHMCWholeBodyController")
    compile ihmc.getProjectDependency(":CommonWalkingControlModules")
    compile ihmc.getProjectDependency(":DarpaRoboticsChallenge")
    compile ihmc.getProjectDependency(":Graphics3DAdapter")
    compile ihmc.getProjectDependency(":RobotDataCommunication")
    compile ihmc.getProjectDependency(":SDFLoader")
    compile ihmc.getProjectDependency(":SensorProcessing")
    compile ihmc.getProjectDependency(":SimulationConstructionSet")
    compile ihmc.getProjectDependency(":IHMCPerception")
    compile ihmc.getProjectDependency(":IHMCJavaToolkit")
    compile ihmc.getProjectDependency(":IHMCRoboticsToolkit")
    compile ihmc.getProjectDependency(":IHMCRobotDescription")
    compile ihmc.getProjectDependency(":IHMCRobotModels")
}

jar {
    manifest {
        attributes(
                "Created-By": "IHMC Gradle Build Script",
                "Implementation-Title": project.name,
                "Implementation-Version": project.version,
                "Implementation-Vendor": "IHMC",

                "Bundle-Name": project.name,
                "Bundle-Version": project.version,
                "Bundle-License": "IHMC Proprietary",
                "Bundle-Vendor": "IHMC")
    }
}
